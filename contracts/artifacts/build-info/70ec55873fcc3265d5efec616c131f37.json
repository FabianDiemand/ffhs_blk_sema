{
	"id": "70ec55873fcc3265d5efec616c131f37",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sunsurance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.22;\r\n\r\ncontract Sunsurance{\r\n    address internal _owner;\r\n\r\n    struct SunsuranceContract {\r\n        address _client;\r\n        uint256 _duration;\r\n        string _panelLocation;\r\n    }\r\n\r\n    mapping (address => SunsuranceContract) _contracts;\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev Extract logic to require owner (DRY)\r\n    */\r\n    modifier requireOwner(){\r\n        require(msg.sender == _owner, \"Only the contract owner is allowed to do the desired action.\");\r\n\r\n        _; \r\n    }\r\n\r\n    function owner() public view requireOwner() returns(address){\r\n        return _owner;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/sunsurance.sol": {
				"Sunsurance": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sunsurance.sol\":60:684  contract Sunsurance{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sunsurance.sol\":305:357  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sunsurance.sol\":339:349  msg.sender */\n  caller\n    /* \"contracts/sunsurance.sol\":330:336  _owner */\n  0x00\n  dup1\n    /* \"contracts/sunsurance.sol\":330:349  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sunsurance.sol\":60:684  contract Sunsurance{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sunsurance.sol\":60:684  contract Sunsurance{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sunsurance.sol\":589:681  function owner() public view requireOwner() returns(address){... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/sunsurance.sol\":641:648  address */\n      0x00\n        /* \"contracts/sunsurance.sol\":487:493  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sunsurance.sol\":473:493  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sunsurance.sol\":473:483  msg.sender */\n      caller\n        /* \"contracts/sunsurance.sol\":473:493  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sunsurance.sol\":465:558  require(msg.sender == _owner, \"Only the contract owner is allowed to do the desired action.\") */\n      tag_9\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_10\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_9:\n        /* \"contracts/sunsurance.sol\":667:673  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sunsurance.sol\":660:673  return _owner */\n      swap1\n      pop\n        /* \"contracts/sunsurance.sol\":589:681  function owner() public view requireOwner() returns(address){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_13:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_14:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_22\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_13\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_15:\n        /* \"#utility.yul\":328:352   */\n      tag_24\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_14\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_26\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_15\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:762   */\n    tag_16:\n        /* \"#utility.yul\":677:688   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup3\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:718   */\n      mstore\n        /* \"#utility.yul\":751:755   */\n      0x20\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":742:756   */\n      add\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:1015   */\n    tag_17:\n        /* \"#utility.yul\":908:942   */\n      0x4f6e6c792074686520636f6e7472616374206f776e657220697320616c6c6f77\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":896:902   */\n      dup3\n        /* \"#utility.yul\":892:906   */\n      add\n        /* \"#utility.yul\":885:943   */\n      mstore\n        /* \"#utility.yul\":977:1007   */\n      0x656420746f20646f20746865206465736972656420616374696f6e2e00000000\n        /* \"#utility.yul\":972:974   */\n      0x20\n        /* \"#utility.yul\":964:970   */\n      dup3\n        /* \"#utility.yul\":960:975   */\n      add\n        /* \"#utility.yul\":953:1008   */\n      mstore\n        /* \"#utility.yul\":768:1015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1021:1387   */\n    tag_18:\n        /* \"#utility.yul\":1163:1166   */\n      0x00\n        /* \"#utility.yul\":1184:1251   */\n      tag_30\n        /* \"#utility.yul\":1248:1250   */\n      0x3c\n        /* \"#utility.yul\":1243:1246   */\n      dup4\n        /* \"#utility.yul\":1184:1251   */\n      tag_16\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":1177:1251   */\n      swap2\n      pop\n        /* \"#utility.yul\":1260:1353   */\n      tag_31\n        /* \"#utility.yul\":1349:1352   */\n      dup3\n        /* \"#utility.yul\":1260:1353   */\n      tag_17\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":1378:1380   */\n      0x40\n        /* \"#utility.yul\":1373:1376   */\n      dup3\n        /* \"#utility.yul\":1369:1381   */\n      add\n        /* \"#utility.yul\":1362:1381   */\n      swap1\n      pop\n        /* \"#utility.yul\":1021:1387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1393:1812   */\n    tag_11:\n        /* \"#utility.yul\":1559:1563   */\n      0x00\n        /* \"#utility.yul\":1597:1599   */\n      0x20\n        /* \"#utility.yul\":1586:1595   */\n      dup3\n        /* \"#utility.yul\":1582:1600   */\n      add\n        /* \"#utility.yul\":1574:1600   */\n      swap1\n      pop\n        /* \"#utility.yul\":1646:1655   */\n      dup2\n        /* \"#utility.yul\":1640:1644   */\n      dup2\n        /* \"#utility.yul\":1636:1656   */\n      sub\n        /* \"#utility.yul\":1632:1633   */\n      0x00\n        /* \"#utility.yul\":1621:1630   */\n      dup4\n        /* \"#utility.yul\":1617:1634   */\n      add\n        /* \"#utility.yul\":1610:1657   */\n      mstore\n        /* \"#utility.yul\":1674:1805   */\n      tag_33\n        /* \"#utility.yul\":1800:1804   */\n      dup2\n        /* \"#utility.yul\":1674:1805   */\n      tag_18\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1666:1805   */\n      swap1\n      pop\n        /* \"#utility.yul\":1393:1812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cc85ec39a9d0929335ab4b0a25e83f1da13b4088256d41b0754907df2f5afdaf64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061022b8061005c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80638da5cb5b1461002d575b5f80fd5b61003561004b565b604051610042919061013e565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d1906101d7565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610128826100ff565b9050919050565b6101388161011e565b82525050565b5f6020820190506101515f83018461012f565b92915050565b5f82825260208201905092915050565b7f4f6e6c792074686520636f6e7472616374206f776e657220697320616c6c6f775f8201527f656420746f20646f20746865206465736972656420616374696f6e2e00000000602082015250565b5f6101c1603c83610157565b91506101cc82610167565b604082019050919050565b5f6020820190508181035f8301526101ee816101b5565b905091905056fea2646970667358221220cc85ec39a9d0929335ab4b0a25e83f1da13b4088256d41b0754907df2f5afdaf64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x22B DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128 DUP3 PUSH2 0xFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x11E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E657220697320616C6C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x656420746F20646F20746865206465736972656420616374696F6E2E00000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1 PUSH1 0x3C DUP4 PUSH2 0x157 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC DUP3 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EE DUP2 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC DUP6 0xEC CODECOPY 0xA9 0xD0 SWAP3 SWAP4 CALLDATALOAD 0xAB 0x4B EXP 0x25 0xE8 EXTCODEHASH SAR LOG1 EXTCODESIZE BLOCKHASH DUP9 0x25 PUSH14 0x41B0754907DF2F5AFDAF64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "60:624:0:-:0;;;305:52;;;;;;;;;;339:10;330:6;;:19;;;;;;;;;;;;;;;;;;60:624;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_47": {
									"entryPoint": 75,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1815:1",
										"nodeType": "YulBlock",
										"src": "0:1815:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "689:73:1",
													"nodeType": "YulBlock",
													"src": "689:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "706:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "711:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "699:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:1"
																},
																"nativeSrc": "699:19:1",
																"nodeType": "YulFunctionCall",
																"src": "699:19:1"
															},
															"nativeSrc": "699:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "699:19:1"
														},
														{
															"nativeSrc": "727:29:1",
															"nodeType": "YulAssignment",
															"src": "727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "746:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "751:4:1",
																		"nodeType": "YulLiteral",
																		"src": "751:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "742:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:1"
																},
																"nativeSrc": "742:14:1",
																"nodeType": "YulFunctionCall",
																"src": "742:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "727:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "593:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "661:3:1",
														"nodeType": "YulTypedName",
														"src": "661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "666:6:1",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "677:11:1",
														"nodeType": "YulTypedName",
														"src": "677:11:1",
														"type": ""
													}
												],
												"src": "593:169:1"
											},
											{
												"body": {
													"nativeSrc": "874:141:1",
													"nodeType": "YulBlock",
													"src": "874:141:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "896:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "904:1:1",
																				"nodeType": "YulLiteral",
																				"src": "904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "892:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:1"
																		},
																		"nativeSrc": "892:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:1"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e657220697320616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "908:34:1",
																		"nodeType": "YulLiteral",
																		"src": "908:34:1",
																		"type": "",
																		"value": "Only the contract owner is allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "885:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:1"
																},
																"nativeSrc": "885:58:1",
																"nodeType": "YulFunctionCall",
																"src": "885:58:1"
															},
															"nativeSrc": "885:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "885:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "972:2:1",
																				"nodeType": "YulLiteral",
																				"src": "972:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "960:3:1"
																		},
																		"nativeSrc": "960:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "960:15:1"
																	},
																	{
																		"hexValue": "656420746f20646f20746865206465736972656420616374696f6e2e",
																		"kind": "string",
																		"nativeSrc": "977:30:1",
																		"nodeType": "YulLiteral",
																		"src": "977:30:1",
																		"type": "",
																		"value": "ed to do the desired action."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "953:6:1"
																},
																"nativeSrc": "953:55:1",
																"nodeType": "YulFunctionCall",
																"src": "953:55:1"
															},
															"nativeSrc": "953:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "953:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451",
												"nativeSrc": "768:247:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "866:6:1",
														"nodeType": "YulTypedName",
														"src": "866:6:1",
														"type": ""
													}
												],
												"src": "768:247:1"
											},
											{
												"body": {
													"nativeSrc": "1167:220:1",
													"nodeType": "YulBlock",
													"src": "1167:220:1",
													"statements": [
														{
															"nativeSrc": "1177:74:1",
															"nodeType": "YulAssignment",
															"src": "1177:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1243:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1243:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1248:2:1",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1184:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1184:58:1"
																},
																"nativeSrc": "1184:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1184:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1177:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1177:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1349:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451",
																	"nativeSrc": "1260:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1260:88:1"
																},
																"nativeSrc": "1260:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1260:93:1"
															},
															"nativeSrc": "1260:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1260:93:1"
														},
														{
															"nativeSrc": "1362:19:1",
															"nodeType": "YulAssignment",
															"src": "1362:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1373:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1373:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1378:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1378:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1369:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1369:3:1"
																},
																"nativeSrc": "1369:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1369:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1362:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1362:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1021:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1155:3:1",
														"nodeType": "YulTypedName",
														"src": "1155:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1163:3:1",
														"nodeType": "YulTypedName",
														"src": "1163:3:1",
														"type": ""
													}
												],
												"src": "1021:366:1"
											},
											{
												"body": {
													"nativeSrc": "1564:248:1",
													"nodeType": "YulBlock",
													"src": "1564:248:1",
													"statements": [
														{
															"nativeSrc": "1574:26:1",
															"nodeType": "YulAssignment",
															"src": "1574:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1586:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1586:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1597:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nativeSrc": "1582:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1582:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1574:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1621:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1621:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1632:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1632:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1617:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1617:3:1"
																		},
																		"nativeSrc": "1617:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1617:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1640:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1640:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1646:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1636:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:1"
																		},
																		"nativeSrc": "1636:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1610:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:1"
																},
																"nativeSrc": "1610:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1610:47:1"
															},
															"nativeSrc": "1610:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1610:47:1"
														},
														{
															"nativeSrc": "1666:139:1",
															"nodeType": "YulAssignment",
															"src": "1666:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1800:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1800:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1674:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1674:124:1"
																},
																"nativeSrc": "1674:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1674:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1666:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1666:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1393:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1544:9:1",
														"nodeType": "YulTypedName",
														"src": "1544:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1559:4:1",
														"nodeType": "YulTypedName",
														"src": "1559:4:1",
														"type": ""
													}
												],
												"src": "1393:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the contract owner is allow\")\n\n        mstore(add(memPtr, 32), \"ed to do the desired action.\")\n\n    }\n\n    function abi_encode_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 60)\n        store_literal_in_memory_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c80638da5cb5b1461002d575b5f80fd5b61003561004b565b604051610042919061013e565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d1906101d7565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610128826100ff565b9050919050565b6101388161011e565b82525050565b5f6020820190506101515f83018461012f565b92915050565b5f82825260208201905092915050565b7f4f6e6c792074686520636f6e7472616374206f776e657220697320616c6c6f775f8201527f656420746f20646f20746865206465736972656420616374696f6e2e00000000602082015250565b5f6101c1603c83610157565b91506101cc82610167565b604082019050919050565b5f6020820190508181035f8301526101ee816101b5565b905091905056fea2646970667358221220cc85ec39a9d0929335ab4b0a25e83f1da13b4088256d41b0754907df2f5afdaf64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128 DUP3 PUSH2 0xFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x11E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E657220697320616C6C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x656420746F20646F20746865206465736972656420616374696F6E2E00000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1 PUSH1 0x3C DUP4 PUSH2 0x157 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC DUP3 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EE DUP2 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC DUP6 0xEC CODECOPY 0xA9 0xD0 SWAP3 SWAP4 CALLDATALOAD 0xAB 0x4B EXP 0x25 0xE8 EXTCODEHASH SAR LOG1 EXTCODESIZE BLOCKHASH DUP9 0x25 PUSH14 0x41B0754907DF2F5AFDAF64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "60:624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;641:7;487:6;;;;;;;;;;;473:20;;:10;:20;;;465:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;667:6:::1;::::0;::::1;;;;;;;;660:13;;589:92:::0;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:247::-;908:34;904:1;896:6;892:14;885:58;977:30;972:2;964:6;960:15;953:55;768:247;:::o;1021:366::-;1163:3;1184:67;1248:2;1243:3;1184:67;:::i;:::-;1177:74;;1260:93;1349:3;1260:93;:::i;:::-;1378:2;1373:3;1369:12;1362:19;;1021:366;;;:::o;1393:419::-;1559:4;1597:2;1586:9;1582:18;1574:26;;1646:9;1640:4;1636:20;1632:1;1621:9;1617:17;1610:47;1674:131;1800:4;1674:131;:::i;:::-;1666:139;;1393:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "111000",
								"executionCost": "24422",
								"totalCost": "135422"
							},
							"external": {
								"owner()": "4659"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 357,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 305,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 339,
									"end": 349,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 330,
									"end": 336,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 336,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc85ec39a9d0929335ab4b0a25e83f1da13b4088256d41b0754907df2f5afdaf64736f6c63430008160033",
									".code": [
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 589,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 589,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 589,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 487,
											"end": 493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 473,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 473,
											"end": 493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 473,
											"end": 483,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 473,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 473,
											"end": 493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 473,
											"end": 493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 465,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 465,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 465,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 660,
											"end": 673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 699,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 768,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792074686520636F6E7472616374206F776E657220697320616C6C6F77"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1007,
											"name": "PUSH",
											"source": 1,
											"value": "656420746F20646F20746865206465736972656420616374696F6E2E00000000"
										},
										{
											"begin": 972,
											"end": 974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 960,
											"end": 975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 953,
											"end": 1008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 768,
											"end": 1015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 1015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1387,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1021,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "3C"
										},
										{
											"begin": 1243,
											"end": 1246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1184,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1251,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1184,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1349,
											"end": 1352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1260,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1353,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1260,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1812,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1393,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1674,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1805,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1674,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/sunsurance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sunsurance.sol\":\"Sunsurance\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/sunsurance.sol\":{\"keccak256\":\"0xd9b6dd7287352878c3ca55f80bcaf2f8b3696fe5d6e5473a716e05fe79409dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a829201aa2e57da61e22e8806d8d6df92ecf9fa4f6dd188305fd7953a22c197\",\"dweb:/ipfs/QmPqXky5o2mGytqsHzV7QyEPygV9HwMdRLzFoGiNT5KSiQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/sunsurance.sol:Sunsurance",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "contracts/sunsurance.sol:Sunsurance",
								"label": "_contracts",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(SunsuranceContract)10_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(SunsuranceContract)10_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Sunsurance.SunsuranceContract)",
								"numberOfBytes": "32",
								"value": "t_struct(SunsuranceContract)10_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(SunsuranceContract)10_storage": {
								"encoding": "inplace",
								"label": "struct Sunsurance.SunsuranceContract",
								"members": [
									{
										"astId": 5,
										"contract": "contracts/sunsurance.sol:Sunsurance",
										"label": "_client",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 7,
										"contract": "contracts/sunsurance.sol:Sunsurance",
										"label": "_duration",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "contracts/sunsurance.sol:Sunsurance",
										"label": "_panelLocation",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/sunsurance.sol": {
				"ast": {
					"absolutePath": "contracts/sunsurance.sol",
					"exportedSymbols": {
						"Sunsurance": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Sunsurance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "Sunsurance",
							"nameLocation": "69:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "103:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "86:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Sunsurance.SunsuranceContract",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "_client",
											"nameLocation": "163:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "155:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "155:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "_duration",
											"nameLocation": "189:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "181:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "181:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_panelLocation",
											"nameLocation": "216:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "209:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 8,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "209:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SunsuranceContract",
									"nameLocation": "125:18:0",
									"nodeType": "StructDefinition",
									"scope": 48,
									"src": "118:120:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_contracts",
									"nameLocation": "286:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "246:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_SunsuranceContract_$10_storage_$",
										"typeString": "mapping(address => struct Sunsurance.SunsuranceContract)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "255:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "246:39:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_SunsuranceContract_$10_storage_$",
											"typeString": "mapping(address => struct Sunsurance.SunsuranceContract)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 12,
												"name": "SunsuranceContract",
												"nameLocations": [
													"266:18:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 10,
												"src": "266:18:0"
											},
											"referencedDeclaration": 10,
											"src": "266:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_SunsuranceContract_$10_storage_ptr",
												"typeString": "struct Sunsurance.SunsuranceContract"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "319:38:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "330:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "339:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "343:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "339:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "330:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "330:19:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:0:0"
									},
									"scope": 48,
									"src": "305:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "454:127:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "473:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "477:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "473:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 30,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "487:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "473:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e657220697320616c6c6f77656420746f20646f20746865206465736972656420616374696f6e2e",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "495:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451",
																"typeString": "literal_string \"Only the contract owner is allowed to do the desired action.\""
															},
															"value": "Only the contract owner is allowed to do the desired action."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f85cbe4aabf6d2cd552783cd876f51bf60824ead713567cb797cfb8e74b91451",
																"typeString": "literal_string \"Only the contract owner is allowed to do the desired action.\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "465:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "465:93:0"
											},
											{
												"id": 35,
												"nodeType": "PlaceholderStatement",
												"src": "571:1:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "365:60:0",
										"text": " @dev Extract logic to require owner (DRY)"
									},
									"id": 37,
									"name": "requireOwner",
									"nameLocation": "440:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "452:2:0"
									},
									"src": "431:150:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "649:32:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "667:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 43,
												"id": 45,
												"nodeType": "Return",
												"src": "660:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 40,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 39,
												"name": "requireOwner",
												"nameLocations": [
													"618:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 37,
												"src": "618:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "618:14:0"
										}
									],
									"name": "owner",
									"nameLocation": "598:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:9:0"
									},
									"scope": 48,
									"src": "589:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 49,
							"src": "60:624:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:651:0"
				},
				"id": 0
			}
		}
	}
}